{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mask"},{"kind":"text","text":"<"},{"text":"Mask","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"mask","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Mask"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Mask"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.mask(_:)"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use overload where mask accepts a @ViewBuilder instead."}],"type":"paragraph"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/keyboardkit\/emoji\/keyboardwrapper\/mask(_:)"]}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","platforms":[{"introducedAt":"13.0","beta":false,"deprecatedAt":"100000.0","unavailable":false,"deprecated":false,"name":"iOS","message":"Use overload where mask accepts a @ViewBuilder instead."},{"introducedAt":"10.15","deprecated":false,"name":"macOS","message":"Use overload where mask accepts a @ViewBuilder instead.","beta":false,"deprecatedAt":"100000.0","unavailable":false},{"unavailable":false,"name":"tvOS","introducedAt":"13.0","deprecatedAt":"100000.0","deprecated":false,"message":"Use overload where mask accepts a @ViewBuilder instead.","beta":false},{"deprecated":false,"beta":false,"introducedAt":"6.0","message":"Use overload where mask accepts a @ViewBuilder instead.","deprecatedAt":"100000.0","name":"watchOS","unavailable":false}],"extendedModule":"SwiftUI","modules":[{"name":"KeyboardKit","relatedModules":["SwiftUI"]}],"title":"mask(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Mask"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Mask"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"externalID":"s:7SwiftUI4ViewPAAE4maskyQrqd__AaBRd__lF::SYNTHESIZED::s:11KeyboardKit5EmojiV0A7WrapperV"},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emoji","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emoji\/KeyboardWrapper","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emoji\/KeyboardWrapper\/View-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emoji\/KeyboardWrapper\/mask(_:)","interfaceLanguage":"swift"},"references":{"doc://KeyboardKit/documentation/KeyboardKit":{"url":"\/documentation\/keyboardkit","abstract":[{"type":"text","text":"KeyboardKit helps you create custom keyboards for iOS and iPadOS, using Swift and SwiftUI."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","title":"KeyboardKit","role":"collection"},"doc://KeyboardKit/documentation/KeyboardKit/Emoji/KeyboardWrapper/mask(_:)":{"url":"\/documentation\/keyboardkit\/emoji\/keyboardwrapper\/mask(_:)","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"mask","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Mask","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Mask"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emoji\/KeyboardWrapper\/mask(_:)","deprecated":true,"kind":"symbol","title":"mask(_:)","type":"topic"},"doc://KeyboardKit/documentation/KeyboardKit/Emoji/KeyboardWrapper/View-Implementations":{"title":"View Implementations","url":"\/documentation\/keyboardkit\/emoji\/keyboardwrapper\/view-implementations","kind":"article","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emoji\/KeyboardWrapper\/View-Implementations","type":"topic","abstract":[],"role":"collectionGroup"},"doc://KeyboardKit/documentation/KeyboardKit/Emoji":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Emoji"}],"title":"Emoji","navigatorTitle":[{"text":"Emoji","kind":"identifier"}],"url":"\/documentation\/keyboardkit\/emoji","kind":"symbol","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emoji","abstract":[{"type":"text","text":"This type represents an emoji and serves as a namespace for"},{"type":"text","text":" "},{"type":"text","text":"emoji-related types and functionality."}],"type":"topic","role":"symbol"},"doc://KeyboardKit/documentation/KeyboardKit/Emoji/KeyboardWrapper":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyboardWrapper","kind":"identifier"}],"title":"Emoji.KeyboardWrapper","navigatorTitle":[{"kind":"identifier","text":"KeyboardWrapper"}],"url":"\/documentation\/keyboardkit\/emoji\/keyboardwrapper","kind":"symbol","identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Emoji\/KeyboardWrapper","type":"topic","abstract":[{"text":"This is used as a view eraser for the emoji keyboard to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"make it possible to inject it with the standard builder"},{"type":"text","text":" "},{"type":"text","text":"in the system keyboard initializer."}],"role":"symbol"}}}